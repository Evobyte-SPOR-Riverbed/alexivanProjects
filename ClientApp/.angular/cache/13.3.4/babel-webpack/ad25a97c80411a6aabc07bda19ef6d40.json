{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\anton\\\\source\\\\repos\\\\PortfolioTracker\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\n// import { Chart } from 'node_modules/chart.js';\nimport { registerables, Chart } from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/app-data.service\";\nexport class AnalyticsComponent {\n  constructor(service) {\n    this.service = service;\n    this.portfolioId = this.service.portfolioId;\n    this.assetListCount = [];\n    this.assetListSymbols = [];\n  }\n\n  ngOnInit() {\n    this.getTrades();\n    Chart.register(ChartDataLabels, ...registerables); // this.subscription = this.service.sharedArray$.subscribe(result => {\n    //   this.assetList = result\n    //   console.log(\"analytics behavior subject\")\n    // })\n    // this.service.sharedArray$.subscribe(result => {\n    //   this.assetList = result\n    //   this.createCharts();\n    // }).unsubscribe()\n    // this.service.sharedArray$.subscribe(result => {\n    //   this.createCharts();\n    // }).unsubscribe()\n    // this.subscription = this.getBehaviorSubject().subscribe(result => {\n    //   this.createCharts();\n    // })\n    // this.subscription.unsubscribe();\n    // this.service.sharedArray$.pipe(map(result => this.assetList = result)).subscribe(result => this.createCharts()).unsubscribe();\n    // this.getBehaviorSubject().then(result => {\n    //   this.createCharts();\n    // })\n\n    this.getBehaviorSubject();\n  } // ngOnDestroy() {\n  //   this.subscription.unsubscribe()\n  // }\n\n\n  getBehaviorSubject() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.assetList = yield firstValueFrom(_this.service.sharedArray$);\n      console.log(_this.assetList, \"behavior subject\");\n    })();\n  }\n\n  createCharts() {\n    this.createUnitsChart();\n    this.createValueChart();\n  }\n\n  createUnitsChart() {\n    this.assetListCount = [];\n    this.assetListSymbols = [];\n    this.assetList.sort((a, b) => a.units.toString().localeCompare(b.units.toString()));\n\n    if (this.assetList.length >= 7) {\n      for (let i = this.assetList.length - 1; i > this.assetList.length - 7; i--) {\n        this.assetListCount.push(this.assetList[i].units);\n        this.assetListSymbols.push(this.assetList[i].symbol);\n      }\n\n      let count = 0;\n\n      for (let i = this.assetList.length - 7; i >= 0; i--) {\n        count = count + this.assetList[i].units;\n      }\n\n      this.assetListCount.push(count);\n      this.assetListSymbols.push(\"Other\");\n    } else {\n      this.assetList.forEach(element => {\n        this.assetListCount.push(element.units);\n        this.assetListSymbols.push(element.symbol);\n      });\n    }\n\n    const pieChartUnits = new Chart(\"pieChartUnits\", {\n      type: 'bar',\n      data: {\n        labels: this.assetListSymbols,\n        datasets: [{\n          label: 'Units',\n          data: this.assetListCount,\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(255, 205, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(201, 203, 207, 0.2)'],\n          borderColor: ['rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(54, 162, 235)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)'],\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false\n          }\n        }\n      }\n    });\n  }\n\n  createValueChart() {\n    this.assetListCount = [];\n    this.assetListSymbols = [];\n    this.assetList.sort((a, b) => a.liveTotal.toString().localeCompare(b.liveTotal.toString()));\n\n    if (this.assetList.length >= 7) {\n      for (let i = this.assetList.length - 1; i > this.assetList.length - 7; i--) {\n        this.assetListCount.push(this.assetList[i].liveTotal);\n        this.assetListSymbols.push(this.assetList[i].symbol);\n      }\n\n      let count = 0;\n\n      for (let i = this.assetList.length - 7; i >= 0; i--) {\n        count = count + this.assetList[i].liveTotal;\n      }\n\n      this.assetListCount.push(count);\n      this.assetListSymbols.push(\"Other\");\n    } else {\n      this.assetList.forEach(element => {\n        this.assetListCount.push(element.liveTotal);\n        this.assetListSymbols.push(element.symbol);\n      });\n    }\n\n    const pieChartValue = new Chart(\"pieChartValue\", {\n      type: 'pie',\n      data: {\n        labels: this.assetListSymbols,\n        datasets: [{\n          label: 'Price',\n          data: this.assetListCount,\n          // backgroundColor: this.colors,\n          hoverOffset: 4\n        }]\n      },\n      options: {\n        plugins: {\n          datalabels: {\n            formatter: (value, ctx) => {\n              let sum = 0;\n              let dataArr = ctx.chart.config.data.datasets[0].data;\n              let dataLabels = ctx.chart.config.data.labels; // console.log(dataLabels)\n              // console.log(dataLabels![dataArr.indexOf(value)])\n\n              dataArr.map(data => {\n                sum += data;\n              });\n              let percentage = (value * 100 / sum).toFixed(2) + \"%\";\n              let display = [dataLabels[dataArr.indexOf(value)], percentage];\n              return display;\n            } // color: '#fff',\n\n          },\n          legend: {\n            display: false\n          }\n        }\n      }\n    });\n  } //TODO : put dates(average?) on portfolio assets?\n\n\n  getUnixTime(tradeDate) {\n    const formatYmd = date => date.toISOString().slice(0, 10);\n\n    const formatDate = formatYmd(new Date(tradeDate));\n    console.log(formatDate);\n    const unixTime = Math.floor(new Date(formatDate).getTime()); // const formatDate = formatYmd(tradeDate);\n    // const unixTime = Math.floor(new Date(formatDate).getTime())\n\n    console.log(unixTime);\n    return unixTime;\n  }\n\n  getTrades() {\n    this.service.getAllTrades(this.portfolioId).subscribe(result => {\n      this.tradesArray = result;\n      console.log(this.tradesArray);\n      this.groupTradesBySymbol();\n    });\n  }\n\n  groupTradesBySymbol() {\n    let result = this.tradesArray.reduce(function (r, a) {\n      r[a.symbol] = r[a.symbol] || [];\n      r[a.symbol].push(a);\n      return r;\n    }, Object.create(null));\n    this.groupedTrades = result;\n    console.log(this.groupedTrades);\n    console.log(this.groupedTrades.ADA[0].createdDate);\n    var tradeTime = this.groupedTrades.ADA[0].createdDate; // var newTradeTime = oldTradeTime.substring(0, oldTradeTime.length - 9);\n\n    console.log(tradeTime);\n    this.unixtime = this.getUnixTime(tradeTime);\n  }\n\n}\n\nAnalyticsComponent.ɵfac = function AnalyticsComponent_Factory(t) {\n  return new (t || AnalyticsComponent)(i0.ɵɵdirectiveInject(i1.AppDataService));\n};\n\nAnalyticsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AnalyticsComponent,\n  selectors: [[\"app-analytics\"]],\n  decls: 11,\n  vars: 0,\n  consts: [[1, \"container\"], [1, \"row\"], [\"id\", \"divChart1\", 1, \"col-3\"], [1, \"text-center\"], [\"id\", \"pieChartUnits\"], [\"id\", \"divChart2\", 1, \"col-3\"], [\"id\", \"pieChartValue\"]],\n  template: function AnalyticsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\n      i0.ɵɵtext(4, \"Assets Units\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"canvas\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"h2\", 3);\n      i0.ɵɵtext(8, \"Total $ Value\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"canvas\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"#divChart1[_ngcontent-%COMP%]{\\r\\n    display: block;\\r\\n    width: 600px;\\r\\n    height: 600px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuYWx5dGljcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLFlBQVk7SUFDWixhQUFhO0FBQ2pCOztBQUVBOzs7O0dBSUciLCJmaWxlIjoiYW5hbHl0aWNzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjZGl2Q2hhcnQxe1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogNjAwcHg7XHJcbiAgICBoZWlnaHQ6IDYwMHB4O1xyXG59XHJcblxyXG4vKiAjZGl2Q2hhcnQye1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBoZWlnaHQ6IDQwMHB4O1xyXG59ICovIl19 */\"]\n});","map":{"version":3,"sources":["C:/Users/anton/source/repos/PortfolioTracker/ClientApp/src/app/analytics/analytics.component.ts"],"names":["registerables","Chart","ChartDataLabels","firstValueFrom","i0","i1","AnalyticsComponent","constructor","service","portfolioId","assetListCount","assetListSymbols","ngOnInit","getTrades","register","getBehaviorSubject","assetList","sharedArray$","console","log","createCharts","createUnitsChart","createValueChart","sort","a","b","units","toString","localeCompare","length","i","push","symbol","count","forEach","element","pieChartUnits","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","plugins","legend","display","liveTotal","pieChartValue","hoverOffset","datalabels","formatter","value","ctx","sum","dataArr","chart","config","dataLabels","map","percentage","toFixed","indexOf","getUnixTime","tradeDate","formatYmd","date","toISOString","slice","formatDate","Date","unixTime","Math","floor","getTime","getAllTrades","subscribe","result","tradesArray","groupTradesBySymbol","reduce","r","Object","create","groupedTrades","ADA","createdDate","tradeTime","unixtime","ɵfac","AnalyticsComponent_Factory","t","ɵɵdirectiveInject","AppDataService","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","consts","template","AnalyticsComponent_Template","rf","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","styles"],"mappings":"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","sourcesContent":["// import { Chart } from 'node_modules/chart.js';\r\nimport { registerables, Chart } from 'chart.js';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport { firstValueFrom } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../services/app-data.service\";\r\nexport class AnalyticsComponent {\r\n    constructor(service) {\r\n        this.service = service;\r\n        this.portfolioId = this.service.portfolioId;\r\n        this.assetListCount = [];\r\n        this.assetListSymbols = [];\r\n    }\r\n    ngOnInit() {\r\n        this.getTrades();\r\n        Chart.register(ChartDataLabels, ...registerables);\r\n        // this.subscription = this.service.sharedArray$.subscribe(result => {\r\n        //   this.assetList = result\r\n        //   console.log(\"analytics behavior subject\")\r\n        // })\r\n        // this.service.sharedArray$.subscribe(result => {\r\n        //   this.assetList = result\r\n        //   this.createCharts();\r\n        // }).unsubscribe()\r\n        // this.service.sharedArray$.subscribe(result => {\r\n        //   this.createCharts();\r\n        // }).unsubscribe()\r\n        // this.subscription = this.getBehaviorSubject().subscribe(result => {\r\n        //   this.createCharts();\r\n        // })\r\n        // this.subscription.unsubscribe();\r\n        // this.service.sharedArray$.pipe(map(result => this.assetList = result)).subscribe(result => this.createCharts()).unsubscribe();\r\n        // this.getBehaviorSubject().then(result => {\r\n        //   this.createCharts();\r\n        // })\r\n        this.getBehaviorSubject();\r\n    }\r\n    // ngOnDestroy() {\r\n    //   this.subscription.unsubscribe()\r\n    // }\r\n    async getBehaviorSubject() {\r\n        this.assetList = await firstValueFrom(this.service.sharedArray$);\r\n        console.log(this.assetList, \"behavior subject\");\r\n    }\r\n    createCharts() {\r\n        this.createUnitsChart();\r\n        this.createValueChart();\r\n    }\r\n    createUnitsChart() {\r\n        this.assetListCount = [];\r\n        this.assetListSymbols = [];\r\n        this.assetList.sort((a, b) => a.units.toString().localeCompare((b.units).toString()));\r\n        if (this.assetList.length >= 7) {\r\n            for (let i = this.assetList.length - 1; i > this.assetList.length - 7; i--) {\r\n                this.assetListCount.push(this.assetList[i].units);\r\n                this.assetListSymbols.push(this.assetList[i].symbol);\r\n            }\r\n            let count = 0;\r\n            for (let i = this.assetList.length - 7; i >= 0; i--) {\r\n                count = count + this.assetList[i].units;\r\n            }\r\n            this.assetListCount.push(count);\r\n            this.assetListSymbols.push(\"Other\");\r\n        }\r\n        else {\r\n            this.assetList.forEach(element => {\r\n                this.assetListCount.push(element.units);\r\n                this.assetListSymbols.push(element.symbol);\r\n            });\r\n        }\r\n        const pieChartUnits = new Chart(\"pieChartUnits\", {\r\n            type: 'bar',\r\n            data: {\r\n                labels: this.assetListSymbols,\r\n                datasets: [{\r\n                        label: 'Units',\r\n                        data: this.assetListCount,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)',\r\n                            'rgba(255, 205, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(201, 203, 207, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgb(255, 99, 132)',\r\n                            'rgb(255, 159, 64)',\r\n                            'rgb(255, 205, 86)',\r\n                            'rgb(75, 192, 192)',\r\n                            'rgb(54, 162, 235)',\r\n                            'rgb(153, 102, 255)',\r\n                            'rgb(201, 203, 207)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n            },\r\n            options: {\r\n                plugins: {\r\n                    legend: {\r\n                        display: false\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    createValueChart() {\r\n        this.assetListCount = [];\r\n        this.assetListSymbols = [];\r\n        this.assetList.sort((a, b) => a.liveTotal.toString().localeCompare((b.liveTotal).toString()));\r\n        if (this.assetList.length >= 7) {\r\n            for (let i = this.assetList.length - 1; i > this.assetList.length - 7; i--) {\r\n                this.assetListCount.push(this.assetList[i].liveTotal);\r\n                this.assetListSymbols.push(this.assetList[i].symbol);\r\n            }\r\n            let count = 0;\r\n            for (let i = this.assetList.length - 7; i >= 0; i--) {\r\n                count = count + this.assetList[i].liveTotal;\r\n            }\r\n            this.assetListCount.push(count);\r\n            this.assetListSymbols.push(\"Other\");\r\n        }\r\n        else {\r\n            this.assetList.forEach(element => {\r\n                this.assetListCount.push(element.liveTotal);\r\n                this.assetListSymbols.push(element.symbol);\r\n            });\r\n        }\r\n        const pieChartValue = new Chart(\"pieChartValue\", {\r\n            type: 'pie',\r\n            data: {\r\n                labels: this.assetListSymbols,\r\n                datasets: [{\r\n                        label: 'Price',\r\n                        data: this.assetListCount,\r\n                        // backgroundColor: this.colors,\r\n                        hoverOffset: 4\r\n                    }]\r\n            },\r\n            options: {\r\n                plugins: {\r\n                    datalabels: {\r\n                        formatter: (value, ctx) => {\r\n                            let sum = 0;\r\n                            let dataArr = ctx.chart.config.data.datasets[0].data;\r\n                            let dataLabels = ctx.chart.config.data.labels;\r\n                            // console.log(dataLabels)\r\n                            // console.log(dataLabels![dataArr.indexOf(value)])\r\n                            dataArr.map((data) => {\r\n                                sum += data;\r\n                            });\r\n                            let percentage = (value * 100 / sum).toFixed(2) + \"%\";\r\n                            let display = [dataLabels[dataArr.indexOf(value)], percentage];\r\n                            return display;\r\n                        },\r\n                        // color: '#fff',\r\n                    },\r\n                    legend: {\r\n                        display: false\r\n                    }\r\n                }\r\n            },\r\n        });\r\n    }\r\n    //TODO : put dates(average?) on portfolio assets?\r\n    getUnixTime(tradeDate) {\r\n        const formatYmd = date => date.toISOString().slice(0, 10);\r\n        const formatDate = formatYmd(new Date(tradeDate));\r\n        console.log(formatDate);\r\n        const unixTime = Math.floor(new Date(formatDate).getTime());\r\n        // const formatDate = formatYmd(tradeDate);\r\n        // const unixTime = Math.floor(new Date(formatDate).getTime())\r\n        console.log(unixTime);\r\n        return unixTime;\r\n    }\r\n    getTrades() {\r\n        this.service.getAllTrades(this.portfolioId).subscribe(result => {\r\n            this.tradesArray = result;\r\n            console.log(this.tradesArray);\r\n            this.groupTradesBySymbol();\r\n        });\r\n    }\r\n    groupTradesBySymbol() {\r\n        let result = this.tradesArray.reduce(function (r, a) {\r\n            r[a.symbol] = r[a.symbol] || [];\r\n            r[a.symbol].push(a);\r\n            return r;\r\n        }, Object.create(null));\r\n        this.groupedTrades = result;\r\n        console.log(this.groupedTrades);\r\n        console.log(this.groupedTrades.ADA[0].createdDate);\r\n        var tradeTime = this.groupedTrades.ADA[0].createdDate;\r\n        // var newTradeTime = oldTradeTime.substring(0, oldTradeTime.length - 9);\r\n        console.log(tradeTime);\r\n        this.unixtime = this.getUnixTime(tradeTime);\r\n    }\r\n}\r\nAnalyticsComponent.ɵfac = function AnalyticsComponent_Factory(t) { return new (t || AnalyticsComponent)(i0.ɵɵdirectiveInject(i1.AppDataService)); };\r\nAnalyticsComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AnalyticsComponent, selectors: [[\"app-analytics\"]], decls: 11, vars: 0, consts: [[1, \"container\"], [1, \"row\"], [\"id\", \"divChart1\", 1, \"col-3\"], [1, \"text-center\"], [\"id\", \"pieChartUnits\"], [\"id\", \"divChart2\", 1, \"col-3\"], [\"id\", \"pieChartValue\"]], template: function AnalyticsComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\", 3);\r\n        i0.ɵɵtext(4, \"Assets Units\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(5, \"canvas\", 4);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"h2\", 3);\r\n        i0.ɵɵtext(8, \"Total $ Value\");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(9, \"canvas\", 6);\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelement(10, \"div\", 1);\r\n        i0.ɵɵelementEnd();\r\n    } }, styles: [\"#divChart1[_ngcontent-%COMP%]{\\r\\n    display: block;\\r\\n    width: 600px;\\r\\n    height: 600px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuYWx5dGljcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLFlBQVk7SUFDWixhQUFhO0FBQ2pCOztBQUVBOzs7O0dBSUciLCJmaWxlIjoiYW5hbHl0aWNzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjZGl2Q2hhcnQxe1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogNjAwcHg7XHJcbiAgICBoZWlnaHQ6IDYwMHB4O1xyXG59XHJcblxyXG4vKiAjZGl2Q2hhcnQye1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogNDAwcHg7XHJcbiAgICBoZWlnaHQ6IDQwMHB4O1xyXG59ICovIl19 */\"] });\r\n"]},"metadata":{},"sourceType":"module"}