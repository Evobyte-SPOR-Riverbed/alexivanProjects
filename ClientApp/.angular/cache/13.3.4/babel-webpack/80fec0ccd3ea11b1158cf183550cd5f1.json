{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\anton\\\\source\\\\repos\\\\PortfolioTracker\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { map } from 'rxjs';\nimport { NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/angular-jwt\";\nimport * as i3 from \"@angular/router\";\nexport class AppDataService {\n  constructor(http, baseUrl, jwtHelper, router) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.jwtHelper = jwtHelper;\n    this.router = router;\n    this.functionisRuning = false;\n    console.log(\"service initialized\");\n    this.decodeJwt();\n    this.currentRoute = \"\";\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        // Show loading indicator\n        console.log('Route change detected');\n      }\n\n      if (event instanceof NavigationEnd) {\n        this.currentRoute = event.url;\n        console.log(event);\n      }\n\n      if (event instanceof NavigationError) {\n        // Hide loading indicator\n        // Present error to user\n        console.log(event.error);\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.getLivePrices(this.portfolioId);\n  } //Authentication\n\n\n  isUserAuthenticated() {\n    const token = localStorage.getItem(\"jwt\");\n    if (token && !this.jwtHelper.isTokenExpired(token)) return true;else return false;\n  }\n\n  logOut() {\n    localStorage.removeItem(\"jwt\");\n  }\n\n  decodeJwt() {\n    const token = this.jwtHelper.decodeToken(localStorage.getItem(\"jwt\") || \"\");\n\n    if (token != null) {\n      this.portfolioId = token.PortfolioId;\n    }\n  }\n\n  reloadCurrentPage() {\n    window.location.reload();\n  } //Search box\n\n\n  getQuotes() {\n    return this.http.get(\"https://api.binance.com/api/v3/ticker/price\").pipe(map(response => response.map(quote => quote['symbol'])));\n  } //Assets\n\n\n  getAllAssets(pid) {\n    return this.http.get(this.baseUrl + 'api/assets/portfolios/' + pid);\n  }\n\n  postAsset(portfolioId, symbol, units) {\n    return this.http.post(this.baseUrl + 'api/assets/portfolios/' + portfolioId, {\n      portfolioId: portfolioId,\n      units: units,\n      symbol: symbol\n    });\n  }\n\n  updateAsset(portfolioId, assetId, symbol, units) {\n    return this.http.put(this.baseUrl + 'api/assets/' + assetId + \"/portfolios/\" + portfolioId, {\n      portfolioId: portfolioId,\n      assetId: assetId,\n      symbol: symbol,\n      units: units\n    });\n  }\n\n  deleteAsset(portfolioId, assetId) {\n    return this.http.delete(this.baseUrl + 'api/assets/' + assetId + \"/portfolios/\" + portfolioId);\n  }\n\n  getAssetsPrice(url) {\n    return this.http.get(url);\n  } //Portfolio\n  // GetPortfolio() {\n  //  return this.http.get<IPortfolio>(this.baseUrl + )\n  // }\n  //TradeTracker\n\n\n  getAllTrades(pid) {\n    return this.http.get(this.baseUrl + \"api/tradehistories/portfolios/\" + pid);\n  }\n\n  postTrade(pid, symbol, units, price, type, date) {\n    return this.http.post(this.baseUrl + \"api/tradehistories/portfolios/\" + pid, {\n      portfolioId: pid,\n      symbol: symbol,\n      units: units,\n      price: price,\n      type: type,\n      createdDate: date\n    });\n  }\n\n  updateTrade(tradeHistoryId, pid, symbol, units, price, type, date) {\n    return this.http.put(this.baseUrl + \"api/tradehistories/\" + tradeHistoryId + \"/portfolios/\" + pid, {\n      portfolioId: pid,\n      tradeHistoryId: tradeHistoryId,\n      symbol: symbol,\n      units: units,\n      price: price,\n      type: type,\n      createdDate: date\n    });\n  }\n\n  deleteTrade(tradeHistoryId, pid) {\n    return this.http.delete(this.baseUrl + \"api/tradehistories/\" + tradeHistoryId + \"/portfolios/\" + pid);\n  } //Live Prices Global Implementation\n\n\n  getLivePrices(pid) {\n    this.getAllAssets(pid).subscribe(result => {\n      result.sort((a, b) => a.symbol.localeCompare(b.symbol));\n      this.assetList = result;\n      this.getAssetListPricesUrl();\n      this.getAssetsLivePrice();\n      console.log(this.assetList);\n    }, error => console.log(error));\n  }\n\n  getAssetListPricesUrl() {\n    this.livePricesUrl = \"https://api.binance.com/api/v3/ticker/price?symbols=[\";\n    this.assetList.forEach(element => {\n      this.livePricesUrl = this.livePricesUrl + '\"' + element.symbol + \"USDT\" + '\"';\n\n      if (this.assetList[this.assetList.length - 1] == element) {\n        this.livePricesUrl = this.livePricesUrl + \"]\";\n      } else {\n        this.livePricesUrl = this.livePricesUrl + \",\";\n      }\n    });\n    console.log(this.livePricesUrl);\n  }\n\n  getAssetsLivePrice() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      while (true) {\n        _this.getAssetsPrice(_this.livePricesUrl).subscribe(result => {\n          result.forEach((element, index) => {\n            result[index].symbol = element.symbol.substring(0, element.symbol.length - 4);\n          });\n          result.sort((a, b) => a.symbol.localeCompare(b.symbol));\n\n          for (let i = 0; i < _this.assetList.length; i++) {\n            _this.assetList[i].livePrice = result[i].price;\n            _this.assetList[i].liveTotal = _this.assetList[i].units * _this.assetList[i].livePrice;\n          }\n\n          _this.calculateTotal();\n        });\n\n        yield new Promise(f => setTimeout(f, 5000));\n        console.log(\"assets live prices running\");\n      }\n    })();\n  }\n\n  calculateTotal() {\n    this.totalBalance = 0;\n    this.assetList.forEach(element => {\n      this.totalBalance = Number(this.totalBalance) + Number(element.liveTotal);\n    });\n    this.assetList = this.assetList;\n  }\n\n}\n\nAppDataService.ɵfac = function AppDataService_Factory(t) {\n  return new (t || AppDataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'), i0.ɵɵinject(i2.JwtHelperService), i0.ɵɵinject(i3.Router));\n};\n\nAppDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppDataService,\n  factory: AppDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/anton/source/repos/PortfolioTracker/ClientApp/src/app/services/app-data.service.ts"],"names":["map","NavigationStart","NavigationEnd","NavigationError","i0","i1","i2","i3","AppDataService","constructor","http","baseUrl","jwtHelper","router","functionisRuning","console","log","decodeJwt","currentRoute","events","subscribe","event","url","error","ngOnInit","getLivePrices","portfolioId","isUserAuthenticated","token","localStorage","getItem","isTokenExpired","logOut","removeItem","decodeToken","PortfolioId","reloadCurrentPage","window","location","reload","getQuotes","get","pipe","response","quote","getAllAssets","pid","postAsset","symbol","units","post","updateAsset","assetId","put","deleteAsset","delete","getAssetsPrice","getAllTrades","postTrade","price","type","date","createdDate","updateTrade","tradeHistoryId","deleteTrade","result","sort","a","b","localeCompare","assetList","getAssetListPricesUrl","getAssetsLivePrice","livePricesUrl","forEach","element","length","index","substring","i","livePrice","liveTotal","calculateTotal","Promise","f","setTimeout","totalBalance","Number","ɵfac","AppDataService_Factory","t","ɵɵinject","HttpClient","JwtHelperService","Router","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":";AAAA,SAASA,GAAT,QAAoB,MAApB;AACA,SAASC,eAAT,EAA0BC,aAA1B,EAAyCC,eAAzC,QAAgE,iBAAhE;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,oBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,OAAP,EAAgBC,SAAhB,EAA2BC,MAA3B,EAAmC;AAC1C,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,gBAAL,GAAwB,KAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAKC,SAAL;AACA,SAAKC,YAAL,GAAoB,EAApB;AACA,SAAKL,MAAL,CAAYM,MAAZ,CAAmBC,SAAnB,CAA8BC,KAAD,IAAW;AACpC,UAAIA,KAAK,YAAYpB,eAArB,EAAsC;AAClC;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;;AACD,UAAIK,KAAK,YAAYnB,aAArB,EAAoC;AAChC,aAAKgB,YAAL,GAAoBG,KAAK,CAACC,GAA1B;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH;;AACD,UAAIA,KAAK,YAAYlB,eAArB,EAAsC;AAClC;AACA;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAK,CAACE,KAAlB;AACH;AACJ,KAdD;AAeH;;AAEDC,EAAAA,QAAQ,GAAG;AACP,SAAKC,aAAL,CAAmB,KAAKC,WAAxB;AACH,GA7BuB,CA8BxB;;;AACAC,EAAAA,mBAAmB,GAAG;AAClB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAd;AACA,QAAIF,KAAK,IAAI,CAAC,KAAKhB,SAAL,CAAemB,cAAf,CAA8BH,KAA9B,CAAd,EACI,OAAO,IAAP,CADJ,KAGI,OAAO,KAAP;AACP;;AACDI,EAAAA,MAAM,GAAG;AACLH,IAAAA,YAAY,CAACI,UAAb,CAAwB,KAAxB;AACH;;AACDhB,EAAAA,SAAS,GAAG;AACR,UAAMW,KAAK,GAAG,KAAKhB,SAAL,CAAesB,WAAf,CAA2BL,YAAY,CAACC,OAAb,CAAqB,KAArB,KAA+B,EAA1D,CAAd;;AACA,QAAIF,KAAK,IAAI,IAAb,EAAmB;AACf,WAAKF,WAAL,GAAmBE,KAAK,CAACO,WAAzB;AACH;AACJ;;AACDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,GAjDuB,CAkDxB;;;AACAC,EAAAA,SAAS,GAAG;AACR,WAAO,KAAK9B,IAAL,CAAU+B,GAAV,CAAc,6CAAd,EACFC,IADE,CACG1C,GAAG,CAAE2C,QAAD,IAAcA,QAAQ,CAAC3C,GAAT,CAAa4C,KAAK,IAAIA,KAAK,CAAC,QAAD,CAA3B,CAAf,CADN,CAAP;AAEH,GAtDuB,CAuDxB;;;AACAC,EAAAA,YAAY,CAACC,GAAD,EAAM;AACd,WAAO,KAAKpC,IAAL,CAAU+B,GAAV,CAAc,KAAK9B,OAAL,GAAe,wBAAf,GAA0CmC,GAAxD,CAAP;AACH;;AACDC,EAAAA,SAAS,CAACrB,WAAD,EAAcsB,MAAd,EAAsBC,KAAtB,EAA6B;AAClC,WAAO,KAAKvC,IAAL,CAAUwC,IAAV,CAAe,KAAKvC,OAAL,GAAe,wBAAf,GAA0Ce,WAAzD,EAAsE;AACzEA,MAAAA,WAAW,EAAEA,WAD4D;AAEzEuB,MAAAA,KAAK,EAAEA,KAFkE;AAGzED,MAAAA,MAAM,EAAEA;AAHiE,KAAtE,CAAP;AAKH;;AACDG,EAAAA,WAAW,CAACzB,WAAD,EAAc0B,OAAd,EAAuBJ,MAAvB,EAA+BC,KAA/B,EAAsC;AAC7C,WAAO,KAAKvC,IAAL,CAAU2C,GAAV,CAAc,KAAK1C,OAAL,GAAe,aAAf,GAA+ByC,OAA/B,GAAyC,cAAzC,GAA0D1B,WAAxE,EAAqF;AACxFA,MAAAA,WAAW,EAAEA,WAD2E;AAExF0B,MAAAA,OAAO,EAAEA,OAF+E;AAGxFJ,MAAAA,MAAM,EAAEA,MAHgF;AAIxFC,MAAAA,KAAK,EAAEA;AAJiF,KAArF,CAAP;AAMH;;AACDK,EAAAA,WAAW,CAAC5B,WAAD,EAAc0B,OAAd,EAAuB;AAC9B,WAAO,KAAK1C,IAAL,CAAU6C,MAAV,CAAiB,KAAK5C,OAAL,GAAe,aAAf,GAA+ByC,OAA/B,GAAyC,cAAzC,GAA0D1B,WAA3E,CAAP;AACH;;AACD8B,EAAAA,cAAc,CAAClC,GAAD,EAAM;AAChB,WAAO,KAAKZ,IAAL,CAAU+B,GAAV,CAAcnB,GAAd,CAAP;AACH,GA/EuB,CAgFxB;AACA;AACA;AACA;AACA;;;AACAmC,EAAAA,YAAY,CAACX,GAAD,EAAM;AACd,WAAO,KAAKpC,IAAL,CAAU+B,GAAV,CAAc,KAAK9B,OAAL,GAAe,gCAAf,GAAkDmC,GAAhE,CAAP;AACH;;AACDY,EAAAA,SAAS,CAACZ,GAAD,EAAME,MAAN,EAAcC,KAAd,EAAqBU,KAArB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwC;AAC7C,WAAO,KAAKnD,IAAL,CAAUwC,IAAV,CAAe,KAAKvC,OAAL,GAAe,gCAAf,GAAkDmC,GAAjE,EAAsE;AACzEpB,MAAAA,WAAW,EAAEoB,GAD4D;AAEzEE,MAAAA,MAAM,EAAEA,MAFiE;AAGzEC,MAAAA,KAAK,EAAEA,KAHkE;AAIzEU,MAAAA,KAAK,EAAEA,KAJkE;AAKzEC,MAAAA,IAAI,EAAEA,IALmE;AAMzEE,MAAAA,WAAW,EAAED;AAN4D,KAAtE,CAAP;AAQH;;AACDE,EAAAA,WAAW,CAACC,cAAD,EAAiBlB,GAAjB,EAAsBE,MAAtB,EAA8BC,KAA9B,EAAqCU,KAArC,EAA4CC,IAA5C,EAAkDC,IAAlD,EAAwD;AAC/D,WAAO,KAAKnD,IAAL,CAAU2C,GAAV,CAAc,KAAK1C,OAAL,GAAe,qBAAf,GAAuCqD,cAAvC,GAAwD,cAAxD,GAAyElB,GAAvF,EAA4F;AAC/FpB,MAAAA,WAAW,EAAEoB,GADkF;AAE/FkB,MAAAA,cAAc,EAAEA,cAF+E;AAG/FhB,MAAAA,MAAM,EAAEA,MAHuF;AAI/FC,MAAAA,KAAK,EAAEA,KAJwF;AAK/FU,MAAAA,KAAK,EAAEA,KALwF;AAM/FC,MAAAA,IAAI,EAAEA,IANyF;AAO/FE,MAAAA,WAAW,EAAED;AAPkF,KAA5F,CAAP;AASH;;AACDI,EAAAA,WAAW,CAACD,cAAD,EAAiBlB,GAAjB,EAAsB;AAC7B,WAAO,KAAKpC,IAAL,CAAU6C,MAAV,CAAiB,KAAK5C,OAAL,GAAe,qBAAf,GAAuCqD,cAAvC,GAAwD,cAAxD,GAAyElB,GAA1F,CAAP;AACH,GA/GuB,CAgHxB;;;AACArB,EAAAA,aAAa,CAACqB,GAAD,EAAM;AACf,SAAKD,YAAL,CAAkBC,GAAlB,EAAuB1B,SAAvB,CAAiC8C,MAAM,IAAI;AACvCA,MAAAA,MAAM,CAACC,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACpB,MAAF,CAASsB,aAAT,CAAuBD,CAAC,CAACrB,MAAzB,CAAtB;AACA,WAAKuB,SAAL,GAAiBL,MAAjB;AACA,WAAKM,qBAAL;AACA,WAAKC,kBAAL;AACA1D,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKuD,SAAjB;AACH,KAND,EAMGhD,KAAK,IAAIR,OAAO,CAACC,GAAR,CAAYO,KAAZ,CANZ;AAOH;;AACDiD,EAAAA,qBAAqB,GAAG;AACpB,SAAKE,aAAL,GAAqB,uDAArB;AACA,SAAKH,SAAL,CAAeI,OAAf,CAAuBC,OAAO,IAAI;AAC9B,WAAKF,aAAL,GAAqB,KAAKA,aAAL,GAAqB,GAArB,GAA2BE,OAAO,CAAC5B,MAAnC,GAA4C,MAA5C,GAAqD,GAA1E;;AACA,UAAI,KAAKuB,SAAL,CAAe,KAAKA,SAAL,CAAeM,MAAf,GAAwB,CAAvC,KAA6CD,OAAjD,EAA0D;AACtD,aAAKF,aAAL,GAAqB,KAAKA,aAAL,GAAqB,GAA1C;AACH,OAFD,MAGK;AACD,aAAKA,aAAL,GAAqB,KAAKA,aAAL,GAAqB,GAA1C;AACH;AACJ,KARD;AASA3D,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK0D,aAAjB;AACH;;AACKD,EAAAA,kBAAkB,GAAG;AAAA;;AAAA;AACvB,aAAO,IAAP,EAAa;AACT,QAAA,KAAI,CAACjB,cAAL,CAAoB,KAAI,CAACkB,aAAzB,EAAwCtD,SAAxC,CAAkD8C,MAAM,IAAI;AACxDA,UAAAA,MAAM,CAACS,OAAP,CAAe,CAACC,OAAD,EAAUE,KAAV,KAAoB;AAC/BZ,YAAAA,MAAM,CAACY,KAAD,CAAN,CAAc9B,MAAd,GAAuB4B,OAAO,CAAC5B,MAAR,CAAe+B,SAAf,CAAyB,CAAzB,EAA4BH,OAAO,CAAC5B,MAAR,CAAe6B,MAAf,GAAwB,CAApD,CAAvB;AACH,WAFD;AAGAX,UAAAA,MAAM,CAACC,IAAP,CAAY,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACpB,MAAF,CAASsB,aAAT,CAAuBD,CAAC,CAACrB,MAAzB,CAAtB;;AACA,eAAK,IAAIgC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAI,CAACT,SAAL,CAAeM,MAAnC,EAA2CG,CAAC,EAA5C,EAAgD;AAC5C,YAAA,KAAI,CAACT,SAAL,CAAeS,CAAf,EAAkBC,SAAlB,GAA8Bf,MAAM,CAACc,CAAD,CAAN,CAAUrB,KAAxC;AACA,YAAA,KAAI,CAACY,SAAL,CAAeS,CAAf,EAAkBE,SAAlB,GAA8B,KAAI,CAACX,SAAL,CAAeS,CAAf,EAAkB/B,KAAlB,GAA0B,KAAI,CAACsB,SAAL,CAAeS,CAAf,EAAkBC,SAA1E;AACH;;AACD,UAAA,KAAI,CAACE,cAAL;AACH,SAVD;;AAWA,cAAM,IAAIC,OAAJ,CAAYC,CAAC,IAAIC,UAAU,CAACD,CAAD,EAAI,IAAJ,CAA3B,CAAN;AACAtE,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH;AAfsB;AAgB1B;;AACDmE,EAAAA,cAAc,GAAG;AACb,SAAKI,YAAL,GAAoB,CAApB;AACA,SAAKhB,SAAL,CAAeI,OAAf,CAAuBC,OAAO,IAAI;AAC9B,WAAKW,YAAL,GAAoBC,MAAM,CAAC,KAAKD,YAAN,CAAN,GAA4BC,MAAM,CAACZ,OAAO,CAACM,SAAT,CAAtD;AACH,KAFD;AAGA,SAAKX,SAAL,GAAiB,KAAKA,SAAtB;AACH;;AA9JuB;;AAgK5B/D,cAAc,CAACiF,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAInF,cAAV,EAA0BJ,EAAE,CAACwF,QAAH,CAAYvF,EAAE,CAACwF,UAAf,CAA1B,EAAsDzF,EAAE,CAACwF,QAAH,CAAY,UAAZ,CAAtD,EAA+ExF,EAAE,CAACwF,QAAH,CAAYtF,EAAE,CAACwF,gBAAf,CAA/E,EAAiH1F,EAAE,CAACwF,QAAH,CAAYrF,EAAE,CAACwF,MAAf,CAAjH,CAAP;AAAkJ,CAA7M;;AACAvF,cAAc,CAACwF,KAAf,GAAuB,aAAc5F,EAAE,CAAC6F,kBAAH,CAAsB;AAAErE,EAAAA,KAAK,EAAEpB,cAAT;AAAyB0F,EAAAA,OAAO,EAAE1F,cAAc,CAACiF,IAAjD;AAAuDU,EAAAA,UAAU,EAAE;AAAnE,CAAtB,CAArC","sourcesContent":["import { map } from 'rxjs';\r\nimport { NavigationStart, NavigationEnd, NavigationError } from '@angular/router';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"@auth0/angular-jwt\";\r\nimport * as i3 from \"@angular/router\";\r\nexport class AppDataService {\r\n    constructor(http, baseUrl, jwtHelper, router) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl;\r\n        this.jwtHelper = jwtHelper;\r\n        this.router = router;\r\n        this.functionisRuning = false;\r\n        console.log(\"service initialized\");\r\n        this.decodeJwt();\r\n        this.currentRoute = \"\";\r\n        this.router.events.subscribe((event) => {\r\n            if (event instanceof NavigationStart) {\r\n                // Show loading indicator\r\n                console.log('Route change detected');\r\n            }\r\n            if (event instanceof NavigationEnd) {\r\n                this.currentRoute = event.url;\r\n                console.log(event);\r\n            }\r\n            if (event instanceof NavigationError) {\r\n                // Hide loading indicator\r\n                // Present error to user\r\n                console.log(event.error);\r\n            }\r\n        });\r\n    }\r\n    ;\r\n    ngOnInit() {\r\n        this.getLivePrices(this.portfolioId);\r\n    }\r\n    //Authentication\r\n    isUserAuthenticated() {\r\n        const token = localStorage.getItem(\"jwt\");\r\n        if (token && !this.jwtHelper.isTokenExpired(token))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    logOut() {\r\n        localStorage.removeItem(\"jwt\");\r\n    }\r\n    decodeJwt() {\r\n        const token = this.jwtHelper.decodeToken(localStorage.getItem(\"jwt\") || \"\");\r\n        if (token != null) {\r\n            this.portfolioId = token.PortfolioId;\r\n        }\r\n    }\r\n    reloadCurrentPage() {\r\n        window.location.reload();\r\n    }\r\n    //Search box\r\n    getQuotes() {\r\n        return this.http.get(\"https://api.binance.com/api/v3/ticker/price\")\r\n            .pipe(map((response) => response.map(quote => quote['symbol'])));\r\n    }\r\n    //Assets\r\n    getAllAssets(pid) {\r\n        return this.http.get(this.baseUrl + 'api/assets/portfolios/' + pid);\r\n    }\r\n    postAsset(portfolioId, symbol, units) {\r\n        return this.http.post(this.baseUrl + 'api/assets/portfolios/' + portfolioId, {\r\n            portfolioId: portfolioId,\r\n            units: units,\r\n            symbol: symbol\r\n        });\r\n    }\r\n    updateAsset(portfolioId, assetId, symbol, units) {\r\n        return this.http.put(this.baseUrl + 'api/assets/' + assetId + \"/portfolios/\" + portfolioId, {\r\n            portfolioId: portfolioId,\r\n            assetId: assetId,\r\n            symbol: symbol,\r\n            units: units\r\n        });\r\n    }\r\n    deleteAsset(portfolioId, assetId) {\r\n        return this.http.delete(this.baseUrl + 'api/assets/' + assetId + \"/portfolios/\" + portfolioId);\r\n    }\r\n    getAssetsPrice(url) {\r\n        return this.http.get(url);\r\n    }\r\n    //Portfolio\r\n    // GetPortfolio() {\r\n    //  return this.http.get<IPortfolio>(this.baseUrl + )\r\n    // }\r\n    //TradeTracker\r\n    getAllTrades(pid) {\r\n        return this.http.get(this.baseUrl + \"api/tradehistories/portfolios/\" + pid);\r\n    }\r\n    postTrade(pid, symbol, units, price, type, date) {\r\n        return this.http.post(this.baseUrl + \"api/tradehistories/portfolios/\" + pid, {\r\n            portfolioId: pid,\r\n            symbol: symbol,\r\n            units: units,\r\n            price: price,\r\n            type: type,\r\n            createdDate: date\r\n        });\r\n    }\r\n    updateTrade(tradeHistoryId, pid, symbol, units, price, type, date) {\r\n        return this.http.put(this.baseUrl + \"api/tradehistories/\" + tradeHistoryId + \"/portfolios/\" + pid, {\r\n            portfolioId: pid,\r\n            tradeHistoryId: tradeHistoryId,\r\n            symbol: symbol,\r\n            units: units,\r\n            price: price,\r\n            type: type,\r\n            createdDate: date\r\n        });\r\n    }\r\n    deleteTrade(tradeHistoryId, pid) {\r\n        return this.http.delete(this.baseUrl + \"api/tradehistories/\" + tradeHistoryId + \"/portfolios/\" + pid);\r\n    }\r\n    //Live Prices Global Implementation\r\n    getLivePrices(pid) {\r\n        this.getAllAssets(pid).subscribe(result => {\r\n            result.sort((a, b) => a.symbol.localeCompare(b.symbol));\r\n            this.assetList = result;\r\n            this.getAssetListPricesUrl();\r\n            this.getAssetsLivePrice();\r\n            console.log(this.assetList);\r\n        }, error => console.log(error));\r\n    }\r\n    getAssetListPricesUrl() {\r\n        this.livePricesUrl = \"https://api.binance.com/api/v3/ticker/price?symbols=[\";\r\n        this.assetList.forEach(element => {\r\n            this.livePricesUrl = this.livePricesUrl + '\"' + element.symbol + \"USDT\" + '\"';\r\n            if (this.assetList[this.assetList.length - 1] == element) {\r\n                this.livePricesUrl = this.livePricesUrl + \"]\";\r\n            }\r\n            else {\r\n                this.livePricesUrl = this.livePricesUrl + \",\";\r\n            }\r\n        });\r\n        console.log(this.livePricesUrl);\r\n    }\r\n    async getAssetsLivePrice() {\r\n        while (true) {\r\n            this.getAssetsPrice(this.livePricesUrl).subscribe(result => {\r\n                result.forEach((element, index) => {\r\n                    result[index].symbol = element.symbol.substring(0, element.symbol.length - 4);\r\n                });\r\n                result.sort((a, b) => a.symbol.localeCompare(b.symbol));\r\n                for (let i = 0; i < this.assetList.length; i++) {\r\n                    this.assetList[i].livePrice = result[i].price;\r\n                    this.assetList[i].liveTotal = this.assetList[i].units * this.assetList[i].livePrice;\r\n                }\r\n                this.calculateTotal();\r\n            });\r\n            await new Promise(f => setTimeout(f, 5000));\r\n            console.log(\"assets live prices running\");\r\n        }\r\n    }\r\n    calculateTotal() {\r\n        this.totalBalance = 0;\r\n        this.assetList.forEach(element => {\r\n            this.totalBalance = Number(this.totalBalance) + Number(element.liveTotal);\r\n        });\r\n        this.assetList = this.assetList;\r\n    }\r\n}\r\nAppDataService.ɵfac = function AppDataService_Factory(t) { return new (t || AppDataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'), i0.ɵɵinject(i2.JwtHelperService), i0.ɵɵinject(i3.Router)); };\r\nAppDataService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AppDataService, factory: AppDataService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}