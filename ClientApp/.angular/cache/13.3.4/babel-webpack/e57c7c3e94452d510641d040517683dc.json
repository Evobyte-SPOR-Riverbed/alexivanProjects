{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\anton\\\\source\\\\repos\\\\PortfolioTracker\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { BehaviorSubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@auth0/angular-jwt\";\nimport * as i3 from \"@angular/router\";\nexport class AppDataService {\n  constructor(http, baseUrl, jwtHelper, router) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.jwtHelper = jwtHelper;\n    this.router = router;\n    this.sharedArray = new BehaviorSubject(null);\n    this.sharedTotal = new BehaviorSubject(null);\n    this.sharedArray$ = this.sharedArray.asObservable();\n    this.sharedTotal$ = this.sharedTotal.asObservable();\n    console.log(\"service initialized\");\n    this.decodeJwt();\n    this.getLivePrices(this.portfolioId);\n    console.log(\"service\", this.assetList); // this.currentRoute = \"\";\n    // this.router.events.subscribe((event: Event) => {\n    //   if (event instanceof NavigationStart) {\n    //     // Show loading indicator\n    //     console.log('Route change detected');\n    //   }\n    //   if (event instanceof NavigationEnd) {\n    //     this.currentRoute = event.url;\n    //     console.log(event);\n    //   }\n    //   if (event instanceof NavigationError) {\n    //     // Hide loading indicator\n    //     // Present error to user\n    //     console.log(event.error);\n    //   }\n    // });\n  } // ngOnInit(): void {\n  // }\n  //Authentication\n\n\n  isUserAuthenticated() {\n    const token = localStorage.getItem(\"jwt\");\n    if (token && !this.jwtHelper.isTokenExpired(token)) return true;else return false;\n  }\n\n  logOut() {\n    localStorage.removeItem(\"jwt\");\n  }\n\n  decodeJwt() {\n    const token = this.jwtHelper.decodeToken(localStorage.getItem(\"jwt\") || \"\");\n\n    if (token != null) {\n      this.portfolioId = token.PortfolioId;\n      console.log(\"decodejwt portfolioid\", console.log(this.portfolioId));\n    }\n  }\n\n  reloadCurrentPage() {\n    window.location.reload();\n  } //Search box\n\n\n  getQuotes() {\n    return this.http.get(\"https://api.binance.com/api/v3/ticker/price\").pipe(map(response => response.map(quote => quote['symbol'])));\n  } //Assets\n\n\n  getAllAssets(pid) {\n    return this.http.get(this.baseUrl + 'api/assets/portfolios/' + pid);\n  }\n\n  postAsset(portfolioId, symbol, units) {\n    return this.http.post(this.baseUrl + 'api/assets/portfolios/' + portfolioId, {\n      portfolioId: portfolioId,\n      units: units,\n      symbol: symbol\n    });\n  }\n\n  updateAsset(portfolioId, assetId, symbol, units) {\n    return this.http.put(this.baseUrl + 'api/assets/' + assetId + \"/portfolios/\" + portfolioId, {\n      portfolioId: portfolioId,\n      assetId: assetId,\n      symbol: symbol,\n      units: units\n    });\n  }\n\n  deleteAsset(portfolioId, assetId) {\n    return this.http.delete(this.baseUrl + 'api/assets/' + assetId + \"/portfolios/\" + portfolioId);\n  }\n\n  getAssetsPrice(url) {\n    return this.http.get(url);\n  } //Portfolio\n  // GetPortfolio() {\n  //  return this.http.get<IPortfolio>(this.baseUrl + )\n  // }\n  //TradeTracker\n\n\n  getAllTrades(pid) {\n    return this.http.get(this.baseUrl + \"api/tradehistories/portfolios/\" + pid);\n  }\n\n  postTrade(pid, symbol, units, price, type, date) {\n    return this.http.post(this.baseUrl + \"api/tradehistories/portfolios/\" + pid, {\n      portfolioId: pid,\n      symbol: symbol,\n      units: units,\n      price: price,\n      type: type,\n      createdDate: date\n    });\n  }\n\n  updateTrade(tradeHistoryId, pid, symbol, units, price, type, date) {\n    return this.http.put(this.baseUrl + \"api/tradehistories/\" + tradeHistoryId + \"/portfolios/\" + pid, {\n      portfolioId: pid,\n      tradeHistoryId: tradeHistoryId,\n      symbol: symbol,\n      units: units,\n      price: price,\n      type: type,\n      createdDate: date\n    });\n  }\n\n  deleteTrade(tradeHistoryId, pid) {\n    return this.http.delete(this.baseUrl + \"api/tradehistories/\" + tradeHistoryId + \"/portfolios/\" + pid);\n  } //Live Prices Global Implementation\n\n\n  getLivePrices(pid) {\n    this.getAllAssets(pid).subscribe(result => {\n      result.sort((a, b) => a.symbol.localeCompare(b.symbol));\n      this.assetList = result;\n      this.getAssetListPricesUrl();\n      this.getAssetsLivePrice();\n      console.log(\"getliveprices\", this.assetList);\n    }, error => console.log(error)); // this.http.get<IAsset[]>(this.baseUrl + 'api/assets/portfolios/' + pid).subscribe(result => {\n    //   result.sort((a, b) => a.symbol.localeCompare(b.symbol))\n    //   this.assetList = result;\n    //   this.getAssetListPricesUrl();\n    //   this.getAssetsLivePrice();\n    //   console.log(this.assetList);\n    // }, error => console.log(error));\n  }\n\n  getAssetListPricesUrl() {\n    this.livePricesUrl = \"https://api.binance.com/api/v3/ticker/price?symbols=[\";\n    this.assetList.forEach(element => {\n      this.livePricesUrl = this.livePricesUrl + '\"' + element.symbol + \"USDT\" + '\"';\n\n      if (this.assetList[this.assetList.length - 1] == element) {\n        this.livePricesUrl = this.livePricesUrl + \"]\";\n      } else {\n        this.livePricesUrl = this.livePricesUrl + \",\";\n      }\n    });\n    console.log(this.livePricesUrl);\n  }\n\n  getAssetsLivePrice() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      while (true) {\n        _this.getAssetsPrice(_this.livePricesUrl).subscribe(result => {\n          result.forEach((element, index) => {\n            result[index].symbol = element.symbol.substring(0, element.symbol.length - 4);\n          });\n          result.sort((a, b) => a.symbol.localeCompare(b.symbol));\n\n          for (let i = 0; i < _this.assetList.length; i++) {\n            _this.assetList[i].livePrice = result[i].price;\n            _this.assetList[i].liveTotal = _this.assetList[i].units * _this.assetList[i].livePrice;\n          }\n\n          _this.calculateTotal();\n\n          _this.setSharedTotal(_this.totalBalance);\n        });\n\n        _this.setSharedArray(_this.assetList);\n\n        yield new Promise(f => setTimeout(f, 5000));\n        console.log(\"assets live prices running\");\n        console.log(\"live prices function\", _this.assetList);\n      }\n    })();\n  }\n\n  calculateTotal() {\n    this.totalBalance = 0;\n    this.assetList.forEach(element => {\n      this.totalBalance = Number(this.totalBalance) + Number(element.liveTotal);\n    }); // this.assetList = this.assetList;\n  }\n\n  setSharedArray(sharedArray) {\n    this.sharedArray.next(sharedArray);\n  }\n\n  setSharedTotal(sharedTotal) {\n    this.sharedTotal.next(sharedTotal);\n  }\n\n}\n\nAppDataService.ɵfac = function AppDataService_Factory(t) {\n  return new (t || AppDataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'), i0.ɵɵinject(i2.JwtHelperService), i0.ɵɵinject(i3.Router));\n};\n\nAppDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppDataService,\n  factory: AppDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/anton/source/repos/PortfolioTracker/ClientApp/src/app/services/app-data.service.ts"],"names":["BehaviorSubject","map","i0","i1","i2","i3","AppDataService","constructor","http","baseUrl","jwtHelper","router","sharedArray","sharedTotal","sharedArray$","asObservable","sharedTotal$","console","log","decodeJwt","getLivePrices","portfolioId","assetList","isUserAuthenticated","token","localStorage","getItem","isTokenExpired","logOut","removeItem","decodeToken","PortfolioId","reloadCurrentPage","window","location","reload","getQuotes","get","pipe","response","quote","getAllAssets","pid","postAsset","symbol","units","post","updateAsset","assetId","put","deleteAsset","delete","getAssetsPrice","url","getAllTrades","postTrade","price","type","date","createdDate","updateTrade","tradeHistoryId","deleteTrade","subscribe","result","sort","a","b","localeCompare","getAssetListPricesUrl","getAssetsLivePrice","error","livePricesUrl","forEach","element","length","index","substring","i","livePrice","liveTotal","calculateTotal","setSharedTotal","totalBalance","setSharedArray","Promise","f","setTimeout","Number","next","ɵfac","AppDataService_Factory","t","ɵɵinject","HttpClient","JwtHelperService","Router","ɵprov","ɵɵdefineInjectable","factory","providedIn"],"mappings":"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","sourcesContent":["import { BehaviorSubject, map } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"@auth0/angular-jwt\";\r\nimport * as i3 from \"@angular/router\";\r\nexport class AppDataService {\r\n    constructor(http, baseUrl, jwtHelper, router) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl;\r\n        this.jwtHelper = jwtHelper;\r\n        this.router = router;\r\n        this.sharedArray = new BehaviorSubject(null);\r\n        this.sharedTotal = new BehaviorSubject(null);\r\n        this.sharedArray$ = this.sharedArray.asObservable();\r\n        this.sharedTotal$ = this.sharedTotal.asObservable();\r\n        console.log(\"service initialized\");\r\n        this.decodeJwt();\r\n        this.getLivePrices(this.portfolioId);\r\n        console.log(\"service\", this.assetList);\r\n        // this.currentRoute = \"\";\r\n        // this.router.events.subscribe((event: Event) => {\r\n        //   if (event instanceof NavigationStart) {\r\n        //     // Show loading indicator\r\n        //     console.log('Route change detected');\r\n        //   }\r\n        //   if (event instanceof NavigationEnd) {\r\n        //     this.currentRoute = event.url;\r\n        //     console.log(event);\r\n        //   }\r\n        //   if (event instanceof NavigationError) {\r\n        //     // Hide loading indicator\r\n        //     // Present error to user\r\n        //     console.log(event.error);\r\n        //   }\r\n        // });\r\n    }\r\n    // ngOnInit(): void {\r\n    // }\r\n    //Authentication\r\n    isUserAuthenticated() {\r\n        const token = localStorage.getItem(\"jwt\");\r\n        if (token && !this.jwtHelper.isTokenExpired(token))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    logOut() {\r\n        localStorage.removeItem(\"jwt\");\r\n    }\r\n    decodeJwt() {\r\n        const token = this.jwtHelper.decodeToken(localStorage.getItem(\"jwt\") || \"\");\r\n        if (token != null) {\r\n            this.portfolioId = token.PortfolioId;\r\n            console.log(\"decodejwt portfolioid\", console.log(this.portfolioId));\r\n        }\r\n    }\r\n    reloadCurrentPage() {\r\n        window.location.reload();\r\n    }\r\n    //Search box\r\n    getQuotes() {\r\n        return this.http.get(\"https://api.binance.com/api/v3/ticker/price\")\r\n            .pipe(map((response) => response.map(quote => quote['symbol'])));\r\n    }\r\n    //Assets\r\n    getAllAssets(pid) {\r\n        return this.http.get(this.baseUrl + 'api/assets/portfolios/' + pid);\r\n    }\r\n    postAsset(portfolioId, symbol, units) {\r\n        return this.http.post(this.baseUrl + 'api/assets/portfolios/' + portfolioId, {\r\n            portfolioId: portfolioId,\r\n            units: units,\r\n            symbol: symbol\r\n        });\r\n    }\r\n    updateAsset(portfolioId, assetId, symbol, units) {\r\n        return this.http.put(this.baseUrl + 'api/assets/' + assetId + \"/portfolios/\" + portfolioId, {\r\n            portfolioId: portfolioId,\r\n            assetId: assetId,\r\n            symbol: symbol,\r\n            units: units\r\n        });\r\n    }\r\n    deleteAsset(portfolioId, assetId) {\r\n        return this.http.delete(this.baseUrl + 'api/assets/' + assetId + \"/portfolios/\" + portfolioId);\r\n    }\r\n    getAssetsPrice(url) {\r\n        return this.http.get(url);\r\n    }\r\n    //Portfolio\r\n    // GetPortfolio() {\r\n    //  return this.http.get<IPortfolio>(this.baseUrl + )\r\n    // }\r\n    //TradeTracker\r\n    getAllTrades(pid) {\r\n        return this.http.get(this.baseUrl + \"api/tradehistories/portfolios/\" + pid);\r\n    }\r\n    postTrade(pid, symbol, units, price, type, date) {\r\n        return this.http.post(this.baseUrl + \"api/tradehistories/portfolios/\" + pid, {\r\n            portfolioId: pid,\r\n            symbol: symbol,\r\n            units: units,\r\n            price: price,\r\n            type: type,\r\n            createdDate: date\r\n        });\r\n    }\r\n    updateTrade(tradeHistoryId, pid, symbol, units, price, type, date) {\r\n        return this.http.put(this.baseUrl + \"api/tradehistories/\" + tradeHistoryId + \"/portfolios/\" + pid, {\r\n            portfolioId: pid,\r\n            tradeHistoryId: tradeHistoryId,\r\n            symbol: symbol,\r\n            units: units,\r\n            price: price,\r\n            type: type,\r\n            createdDate: date\r\n        });\r\n    }\r\n    deleteTrade(tradeHistoryId, pid) {\r\n        return this.http.delete(this.baseUrl + \"api/tradehistories/\" + tradeHistoryId + \"/portfolios/\" + pid);\r\n    }\r\n    //Live Prices Global Implementation\r\n    getLivePrices(pid) {\r\n        this.getAllAssets(pid).subscribe(result => {\r\n            result.sort((a, b) => a.symbol.localeCompare(b.symbol));\r\n            this.assetList = result;\r\n            this.getAssetListPricesUrl();\r\n            this.getAssetsLivePrice();\r\n            console.log(\"getliveprices\", this.assetList);\r\n        }, error => console.log(error));\r\n        // this.http.get<IAsset[]>(this.baseUrl + 'api/assets/portfolios/' + pid).subscribe(result => {\r\n        //   result.sort((a, b) => a.symbol.localeCompare(b.symbol))\r\n        //   this.assetList = result;\r\n        //   this.getAssetListPricesUrl();\r\n        //   this.getAssetsLivePrice();\r\n        //   console.log(this.assetList);\r\n        // }, error => console.log(error));\r\n    }\r\n    getAssetListPricesUrl() {\r\n        this.livePricesUrl = \"https://api.binance.com/api/v3/ticker/price?symbols=[\";\r\n        this.assetList.forEach(element => {\r\n            this.livePricesUrl = this.livePricesUrl + '\"' + element.symbol + \"USDT\" + '\"';\r\n            if (this.assetList[this.assetList.length - 1] == element) {\r\n                this.livePricesUrl = this.livePricesUrl + \"]\";\r\n            }\r\n            else {\r\n                this.livePricesUrl = this.livePricesUrl + \",\";\r\n            }\r\n        });\r\n        console.log(this.livePricesUrl);\r\n    }\r\n    async getAssetsLivePrice() {\r\n        while (true) {\r\n            this.getAssetsPrice(this.livePricesUrl).subscribe(result => {\r\n                result.forEach((element, index) => {\r\n                    result[index].symbol = element.symbol.substring(0, element.symbol.length - 4);\r\n                });\r\n                result.sort((a, b) => a.symbol.localeCompare(b.symbol));\r\n                for (let i = 0; i < this.assetList.length; i++) {\r\n                    this.assetList[i].livePrice = result[i].price;\r\n                    this.assetList[i].liveTotal = this.assetList[i].units * this.assetList[i].livePrice;\r\n                }\r\n                this.calculateTotal();\r\n                this.setSharedTotal(this.totalBalance);\r\n            });\r\n            this.setSharedArray(this.assetList);\r\n            await new Promise(f => setTimeout(f, 5000));\r\n            console.log(\"assets live prices running\");\r\n            console.log(\"live prices function\", this.assetList);\r\n        }\r\n    }\r\n    calculateTotal() {\r\n        this.totalBalance = 0;\r\n        this.assetList.forEach(element => {\r\n            this.totalBalance = Number(this.totalBalance) + Number(element.liveTotal);\r\n        });\r\n        // this.assetList = this.assetList;\r\n    }\r\n    setSharedArray(sharedArray) {\r\n        this.sharedArray.next(sharedArray);\r\n    }\r\n    setSharedTotal(sharedTotal) {\r\n        this.sharedTotal.next(sharedTotal);\r\n    }\r\n}\r\nAppDataService.ɵfac = function AppDataService_Factory(t) { return new (t || AppDataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'), i0.ɵɵinject(i2.JwtHelperService), i0.ɵɵinject(i3.Router)); };\r\nAppDataService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AppDataService, factory: AppDataService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}